# -*- coding: utf-8 -*-
"""Exercise1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17R1smEnL_rMZP4kfa-h1VWJ4jiHQed4Z

Variables and Data types

Python uses five standard data types:

**Numbers**
"""

varNum = 123
pi = 3.14159

"""**Strings**"""

varString = "Hello world!"
varText = "This is a string"

"""**Lists**"""

varList = ["abc", 123]

"""**Tuples**"""

varTuple = ('abc', 123, "HELLO")

"""**Dictionaries**"""

var = 3
varDict = {}'first':1, '2':'2nd', 3:var}

varDict = {}
varDict['first']=1
varDict['2'] = '2nd'
varDict[3] = var

"""**Addition**"""

a = 5 + 3
print(a)

"""**Subtraction**"""

a = 5 - 3
print(a)

"""**Multiplication**"""

a = 5 * 3
print(a)

"""**Exponent**"""

a = 5**3
print(a)

"""**Division**"""

a = 5 / 3
print(a)

a = 5 % 3
print(a)

a = 5 // 3
print(a)

"""**Increment/Decrement**"""

a = 5
a +=1
print(a)

"""**Decrement**"""

a = 5
a -=1
print(a)

"""**String Concatenation**"""

a = 'Hello' + 'world!'
print (a)

"""**Complex Expressions**"""

a = 3 + 5 - 6 * 2 / 4
print(a)

"""**Boolean** **Conditions**"""

x = True

if x:
  print("varx is True")
else:
  print("var is False")
  print (x)

"""**String Conditions**"""

x = "Hello World!"

if x == ('Hello World!'):
  print ("var x is Hello World!")
else:
  print("var x is not Hello World!")

"""**Numerical Conditions**"""

x = 10

if x =='10':
  print("var x is a string")
elif x == 10:
  print("var x is an integer")
else:
  print("var x is none of the above")

"""**Lists**

*can contain a number of values comprised of different datatypes.*
"""

pi = 3.14159
varList = [1, 2, 'A', 'B', 'Hello!', pi]
print(varList[0])

print(varList[4])

varList.append('World!')
print(varList[6])

len(varList)

print(varList[5])

varList.remove(pi)
print(varList[5])

"""**Dictionaries**"""

var = "Hello World!"
varDict = {'first' :123, '2' : 'abc',
           '3' : var, '4' : ['lista', 'listb']}
print(varDict['first'])

print(varDict['2'])

print(varDict['3'])

print(varDict['4'])

print(varDict['4'][1])

len(varDict)

"""**Slicing**"""

varList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(varList[:5])

print(varList[5:])

print(varList[:-2])

print(varList[-2:])

print(varList[2:-2])

print(varList[2:8:2])

"""**Functions**"""

def remainder(n,m):
    while True:
        if n - m <0:
          return n
        else:
          n = n - m
remainder(10,4)